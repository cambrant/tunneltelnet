#!/usr/bin/env python

import sys
import datetime


class tstee():
    def timestamp(self):
        return datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S|')

    def run(self, outputfile):
        try:
            of = open(outputfile, "w", 1)  # 1 for line buffering.
        except:
            print 'Error: Could not open file!'
            sys.exit(1)

        # Write the initial timestamp for the first line separately, since we don't
        # have an initial newline character to match.
        of.write(self.timestamp())
        while True:
            # Read stdin one byte at a time, inserting a timestamp after each newline.
            input_data = sys.stdin.read(1)
            if input_data:
                if input_data in [chr(8), '\r']:
                    # Catch backspaces and carriage returns and don't print them to
                    # the output file.
                    pass
                else:
                    of.write(input_data)

                if input_data == '\n':
                    # If a newline was written, write a new timestamp to the output file.
                    of.write(self.timestamp())

                sys.stdout.write(input_data)
                sys.stdout.flush()
            else:
                break

        of.close()

if __name__ == '__main__':
    if len(sys.argv) is not 2:
        print 'Usage:', sys.argv[0], '<output file>'
        sys.exit(1)

    outputfile = sys.argv[1]

    t = tstee()
    t.run(outputfile)
